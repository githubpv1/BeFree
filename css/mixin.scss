@mixin font($font_name, $file_name, $weight, $style) {

	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff2") format("woff2"),
		url("../fonts/#{$file_name}.woff") format("woff");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}


// мой миксин без ограничения, медиа самому поствыить надо

// $maxWidth: 1170; //макетная ширина

@mixin adaptiv-font($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
}

@mixin adaptiv-padding($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	padding: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
}

// .h5 {
// 	font-weight: 900;
// 	@include adaptiv-font(40, 24);
// 	@include adaptiv-padding(50, 20) 
// }


// рыжего миксин с медиа

$maxWidth: 1920; //макетная ширина с исходными параметрами
$maxWidthContainer: 1170; // ширина с/до которой изменять параметр
// 4 значение где изменять параметр
// 0 - на любой ширине
// 1 - до maxWidthContainer
//  - после maxWidthContainer

@mixin adaptiv-value($property, $pcSize, $mobSize, $type) {
	$addSize: $pcSize - $mobSize;

	@if $type==1 {
		// если меньше контейнера
		#{$property}: $pcSize + px;

		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		// если больше контейнера
		#{$property}: $pcSize + px;

		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		// всегда
		#{$property}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}


// .h5 {
// 	font-weight: 900;
// 	@include adaptiv-value("font-size", 40, 24, 0);
// 	@include adaptiv-value("padding", 50, 20, 1); 
// 	@include adaptiv-value("margin-bottom", 50, 20, 2); 
// }
